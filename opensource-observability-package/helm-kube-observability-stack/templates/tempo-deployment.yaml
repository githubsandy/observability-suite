{{- if .Values.tempo.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tempo
  namespace: {{ .Values.namespace }}
  labels:
    app: tempo
    component: tracing-backend
spec:
  replicas: {{ .Values.tempo.replicas }}
  selector:
    matchLabels:
      app: tempo
  template:
    metadata:
      labels:
        app: tempo
        component: tracing-backend
    spec:
      {{- if .Values.environment.cluster.nodeSelector.enabled }}
      {{- if eq .Values.environment.cluster.nodeSelector.strategy "labels" }}
      nodeSelector:
        {{- toYaml .Values.environment.cluster.nodeSelector.nodeLabels | nindent 8 }}
      {{- else if eq .Values.environment.cluster.nodeSelector.strategy "hostname" }}
      {{- if .Values.environment.cluster.nodeSelector.targetNodes }}
      nodeSelector:
        kubernetes.io/hostname: {{ index .Values.environment.cluster.nodeSelector.targetNodes 0 }}
      {{- end }}
      {{- end }}
      {{- end }}
      containers:
      - name: tempo
        image: {{ .Values.tempo.image }}
        ports:
        - containerPort: 3200
          name: http
        - containerPort: 9095  
          name: grpc
        - containerPort: 14268
          name: jaeger-http
        - containerPort: 14250
          name: jaeger-grpc
        - containerPort: 9411
          name: zipkin
        - containerPort: 4317
          name: otlp-grpc
        - containerPort: 4318
          name: otlp-http
        resources:
          limits:
            cpu: {{ index .Values.resources.templates .Values.resources.sizing "cpu" "limits" }}
            memory: {{ index .Values.resources.templates .Values.resources.sizing "memory" "limits" }}
          requests:
            cpu: {{ index .Values.resources.templates .Values.resources.sizing "cpu" "requests" }}
            memory: {{ index .Values.resources.templates .Values.resources.sizing "memory" "requests" }}
        volumeMounts:
        - name: tempo-config
          mountPath: /etc/tempo
        - name: tempo-storage
          mountPath: /var/tempo
        args:
          - -config.file=/etc/tempo/tempo.yaml
        env:
        - name: CLUSTER_NAME
          value: {{ .Values.environment.name }}
        livenessProbe:
          httpGet:
            path: /ready
            port: 3200
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /ready
            port: 3200
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: tempo-config
        configMap:
          name: tempo-config
      - name: tempo-storage
        {{- if .Values.environment.cluster.storage.persistence.enabled }}
        persistentVolumeClaim:
          claimName: tempo-storage-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
{{- end }}