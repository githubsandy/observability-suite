{{- if .Values.components.enhanced.enhancedBlackbox }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: blackbox-exporter-config
  namespace: {{ .Values.namespace }}
  labels:
    app: blackbox-exporter
    component: external-monitoring
data:
  blackbox.yml: |
    modules:
      # Standard HTTP 2xx check
      http_2xx:
        prober: http
        timeout: 5s
        http:
          method: GET
          valid_http_versions: ["HTTP/1.1", "HTTP/2"]
          fail_if_ssl: false
          fail_if_not_ssl: false
          valid_status_codes: []
          follow_redirects: true
          preferred_ip_protocol: "ip4"
          headers:
            User-Agent: "Blackbox-Exporter/{{ .Values.environment.name }}"

      # HTTPS with SSL verification
      http_2xx_ssl:
        prober: http
        timeout: 10s
        http:
          method: GET
          valid_http_versions: ["HTTP/1.1", "HTTP/2"]
          fail_if_not_ssl: true
          tls_config:
            insecure_skip_verify: false
          follow_redirects: true
          preferred_ip_protocol: "ip4"
          headers:
            User-Agent: "Blackbox-Exporter/{{ .Values.environment.name }}"

      # HTTP POST check for API endpoints
      http_post_2xx:
        prober: http
        timeout: 10s
        http:
          method: POST
          headers:
            Content-Type: "application/json"
            User-Agent: "Blackbox-Exporter/{{ .Values.environment.name }}"
          body: '{"health": "check"}'
          valid_status_codes: [200, 201, 202]
          follow_redirects: false

      # CXTAF specific health check
      cxtaf_health:
        prober: http
        timeout: 15s
        http:
          method: GET
          valid_http_versions: ["HTTP/1.1", "HTTP/2"]
          fail_if_ssl: false
          fail_if_not_ssl: false
          valid_status_codes: [200, 301, 302]
          follow_redirects: true
          headers:
            User-Agent: "CALO-Lab-Monitor"
          basic_auth:
            username: ""
            password: ""

      # CXTM API health check
      cxtm_api_health:
        prober: http
        timeout: 20s
        http:
          method: GET
          valid_http_versions: ["HTTP/1.1", "HTTP/2"]
          valid_status_codes: [200, 204]
          headers:
            Accept: "application/json"
            User-Agent: "CALO-Lab-Monitor"

      # TCP connectivity check
      tcp_connect:
        prober: tcp
        timeout: 5s
        tcp:
          preferred_ip_protocol: "ip4"

      # SSH connectivity check
      ssh_banner:
        prober: tcp
        timeout: 10s
        tcp:
          query_response:
          - expect: "^SSH-2.0-"
          preferred_ip_protocol: "ip4"

      # ICMP ping check
      icmp:
        prober: icmp
        timeout: 5s
        icmp:
          preferred_ip_protocol: "ip4"

      # DNS query check
      dns_google:
        prober: dns
        timeout: 5s
        dns:
          query_name: "google.com"
          query_type: "A"
          valid_rcodes: 
          - NOERROR
          validate_answer_rrs:
            fail_if_matches_regexp:
            - ".*127.0.0.1"
            fail_if_not_matches_regexp:
            - ".*"

      # DNS query for internal services
      dns_internal:
        prober: dns
        timeout: 10s
        dns:
          query_name: "kubernetes.default.svc.cluster.local"
          query_type: "A"
          valid_rcodes:
          - NOERROR

      # MySQL/MariaDB connection check (for CXTM)
      mysql_connect:
        prober: tcp
        timeout: 5s
        tcp:
          query_response:
          - expect: "^\x00\x00\x00"
          preferred_ip_protocol: "ip4"

      # Redis connection check (for CXTM) 
      redis_connect:
        prober: tcp
        timeout: 5s
        tcp:
          query_response:
          - send: "PING\r\n"
          - expect: "\\+PONG"
          preferred_ip_protocol: "ip4"

      # GraphQL endpoint check
      graphql_health:
        prober: http
        timeout: 10s
        http:
          method: POST
          headers:
            Content-Type: "application/json"
            User-Agent: "Blackbox-Exporter/{{ .Values.environment.name }}"
          body: '{"query": "{ __schema { queryType { name } } }"}'
          valid_status_codes: [200]

      # File download check
      http_download:
        prober: http
        timeout: 30s
        http:
          method: GET
          valid_status_codes: [200]
          body_size_limit: 1048576  # 1MB limit
          headers:
            User-Agent: "Blackbox-Exporter/{{ .Values.environment.name }}"

      # Certificate expiry check
      tls_connect:
        prober: tcp
        timeout: 10s
        tcp:
          tls: true
          tls_config:
            insecure_skip_verify: false
          preferred_ip_protocol: "ip4"

      # Kubernetes API health check
      k8s_api:
        prober: http
        timeout: 10s
        http:
          method: GET
          valid_http_versions: ["HTTP/1.1", "HTTP/2"]
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          valid_status_codes: [200, 401, 403]

      # SMTP check
      smtp_starttls:
        prober: tcp
        timeout: 10s
        tcp:
          query_response:
          - expect: "^220.*ESMTP.*$"
          - send: "EHLO blackbox-exporter"
          - expect: "^250-STARTTLS"
          - send: "STARTTLS"
          - expect: "^220"
          - starttls: true
          - send: "EHLO blackbox-exporter"
          - expect: "^250-AUTH"
          - send: "QUIT"

      # FTP check
      ftp_banner:
        prober: tcp
        timeout: 5s
        tcp:
          query_response:
          - expect: "^220.*FTP.*ready.*"
          preferred_ip_protocol: "ip4"
{{- end }}