apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-state-metrics
  namespace: {{ .Values.namespace }}
  labels:
    app: kube-state-metrics
spec:
  replicas: {{ .Values.kubeStateMetrics.replicas }}
  selector:
    matchLabels:
      app: kube-state-metrics
  template:
    metadata:
      labels:
        app: kube-state-metrics
    spec:
      serviceAccount: kube-state-metrics
      containers:
      - name: kube-state-metrics
        image: {{ .Values.kubeStateMetrics.image }}
        args:
        - --port=8080
        - --telemetry-port=8081
        - --use-apiserver-cache
        - --metric-labels-allowlist=nodes=[*]
        env:
        - name: KUBERNETES_SERVICE_HOST
          value: "kubernetes.default.svc.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        ports:
        - containerPort: 8080
          name: http-metrics
        - containerPort: 8081
          name: telemetry
        resources:
          limits:
            cpu: {{ .Values.kubeStateMetrics.resources.limits.cpu }}
            memory: {{ .Values.kubeStateMetrics.resources.limits.memory }}
          requests:
            cpu: {{ .Values.kubeStateMetrics.resources.requests.cpu }}
            memory: {{ .Values.kubeStateMetrics.resources.requests.memory }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 5
          timeoutSeconds: 5