apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: {{ .Values.environment.namespace | default .Values.namespace }}
  labels:
    app: prometheus
    component: metrics-collection
data:
  prometheus.yml: |
    global:
      scrape_interval: {{ .Values.performance.scrapeIntervals.default }}
      evaluation_interval: {{ .Values.performance.scrapeIntervals.default }}
      external_labels:
        cluster: {{ .Values.environment.name }}
        environment: {{ .Values.environment.type }}

    {{- if .Values.alertmanager.enabled }}
    # Alertmanager configuration
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093
          path_prefix: /
          scheme: http
    {{- end }}

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    scrape_configs:
      # Self-monitoring - Prometheus
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
        scrape_interval: {{ .Values.performance.scrapeIntervals.default }}


      {{- if .Values.tempo.enabled }}
      # Grafana Tempo metrics
      - job_name: 'tempo'
        static_configs:
          - targets: ['tempo:{{ .Values.tempo.service.port }}']
        scrape_interval: {{ .Values.performance.scrapeIntervals.default }}
      {{- end }}

      {{- if .Values.alertmanager.enabled }}
      # AlertManager metrics
      - job_name: 'alertmanager'
        static_configs:
          - targets: ['alertmanager:9093']
        scrape_interval: {{ .Values.performance.scrapeIntervals.default }}
      {{- end }}

      {{- if .Values.mtr.enabled }}
      # MTR Network Path Analyzer metrics
      - job_name: 'mtr-analyzer'
        static_configs:
          - targets: ['mtr-analyzer:8080']
        scrape_interval: {{ .Values.performance.scrapeIntervals.slow }}
        scrape_timeout: 30s
      {{- end }}

      # Dynamic Blackbox Exporter targets
      {{- if .Values.monitoringTargets.external.enabled }}
      {{- range .Values.monitoringTargets.external.endpoints }}
      - job_name: 'blackbox-{{ .name }}'
        metrics_path: /probe
        params:
          module: [{{ .module }}]
        static_configs:
          - targets:
              - {{ .url }}
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: blackbox-exporter:9115
        scrape_interval: {{ .interval | default "30s" }}
      {{- end }}
      {{- end }}

      # CXTAF Services Monitoring
      {{- if .Values.monitoringTargets.internal.autoDiscovery }}
      {{- range .Values.monitoringTargets.internal.services }}
      {{- if eq .namespace "cxtaf-cxeng" }}
      - job_name: 'cxtaf-{{ .service }}'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - {{ .namespace }}
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: {{ .service }}
        - source_labels: [__meta_kubernetes_namespace]
          target_label: namespace
        - source_labels: [__meta_kubernetes_service_name]
          target_label: service
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: pod
        scrape_interval: {{ $.Values.performance.scrapeIntervals.default }}
      {{- end }}
      {{- end }}
      {{- end }}

      # CXTM Services Monitoring  
      {{- if .Values.monitoringTargets.internal.autoDiscovery }}
      {{- range .Values.monitoringTargets.internal.services }}
      {{- if eq .namespace "cxtm" }}
      - job_name: 'cxtm-{{ .service }}'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - {{ .namespace }}
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: {{ .service }}
        - source_labels: [__meta_kubernetes_namespace]
          target_label: namespace
        - source_labels: [__meta_kubernetes_service_name]
          target_label: service
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: pod
        scrape_interval: {{ $.Values.performance.scrapeIntervals.default }}
        {{- if .port }}
        - source_labels: [__address__]
          regex: '([^:]+)(?::\d+)?'
          target_label: __address__
          replacement: '${1}:{{ .port }}'
        {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}

      # Kubernetes Infrastructure Monitoring
      - job_name: 'kube-state-metrics'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - {{ .Values.namespace }}
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: kube-state-metrics
        scrape_interval: {{ .Values.performance.scrapeIntervals.default }}

      # Node Exporter scrape job (existing node-exporter in ao namespace)
      - job_name: 'node-exporter-existing'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - {{ .Values.namespace }}
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: 'node-exporter-prometheus-node-exporter'
        scrape_interval: {{ .Values.performance.scrapeIntervals.default }}

      {{- if .Values.components.enhanced.cadvisor }}
      # cAdvisor metrics from kubelet (container-level metrics)
      - job_name: 'kubelet-cadvisor'
        kubernetes_sd_configs:
        - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__address__]
          regex: '(.*):10250'
          target_label: __address__
          replacement: '${1}:10250'
        - source_labels: [__address__]
          regex: '(.*):(.*)'
          target_label: __address__
          replacement: '${1}:10250'
        - target_label: __metrics_path__
          replacement: /metrics/cadvisor
        - source_labels: [__meta_kubernetes_node_name]
          target_label: node
        scrape_interval: {{ .Values.performance.scrapeIntervals.default }}
        metric_relabel_configs:
        - source_labels: [__name__]
          regex: 'container_(cpu|memory|network|fs)_.*'
          action: keep
      {{- end }}

      # Database Exporters (conditional based on configuration)
      {{- if .Values.components.databases.mongodb }}
      - job_name: 'mongodb-exporter'
        static_configs:
          - targets: ['mongodb-exporter:9216']
        scrape_interval: {{ .Values.performance.scrapeIntervals.default }}
      {{- end }}

      {{- if .Values.components.databases.postgresql }}
      - job_name: 'postgres-exporter' 
        static_configs:
          - targets: ['postgres-exporter:9187']
        scrape_interval: {{ .Values.performance.scrapeIntervals.default }}
      {{- end }}

      {{- if .Values.components.databases.redis }}
      # Redis Exporter from CXTM namespace
      - job_name: 'cxtm-redis-metrics'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - cxtm
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: cxtm-redis
        - source_labels: [__address__]
          regex: '([^:]+)(?::\d+)?'
          target_label: __address__
          replacement: '${1}:9121'
        scrape_interval: {{ .Values.performance.scrapeIntervals.default }}
      {{- end }}

      {{- if .Values.components.databases.mariadb }}
      # MariaDB Exporter from CXTM namespace  
      - job_name: 'cxtm-mariadb-metrics'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - cxtm
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: cxtm-mariadb
        - source_labels: [__address__]
          regex: '([^:]+)(?::\d+)?'
          target_label: __address__
          replacement: '${1}:9104'
        scrape_interval: {{ .Values.performance.scrapeIntervals.default }}
      {{- end }}

      # Application Exporters (conditional)
      {{- if .Values.components.applications.jenkins }}
      - job_name: 'jenkins-exporter'
        static_configs:
          - targets: ['jenkins-exporter:9118']
        scrape_interval: {{ .Values.performance.scrapeIntervals.slow }}
      {{- end }}

      {{- if .Values.components.applications.fastapi }}
      # FastAPI Custom Metrics
      - job_name: 'fastapi-metrics'
        static_configs:
          - targets: ['fastapi-metrics:8001']
        scrape_interval: {{ .Values.performance.scrapeIntervals.fast }}
        metrics_path: /metrics
      {{- end }}

      # Kubernetes Pod Auto-Discovery (for annotated pods)
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
            {{- range .Values.environment.cluster.crossNamespaceMonitoring.targetNamespaces }}
            - {{ . }}
            {{- end }}
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name