{{- if .Values.alertmanager.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: {{ .Values.environment.namespace | default .Values.namespace }}
  labels:
    app: alertmanager
    component: alert-management
data:
  alertmanager.yml: |
    global:
      # Global SMTP configuration (configure for your environment)
      {{- if .Values.alerting.notifications.email.enabled }}
      smtp_smarthost: {{ .Values.alerting.notifications.email.smtp.host | default "localhost:587" }}
      smtp_from: {{ .Values.alerting.notifications.email.smtp.from | default "alerts@observability.local" }}
      {{- if .Values.alerting.notifications.email.smtp.username }}
      smtp_auth_username: {{ .Values.alerting.notifications.email.smtp.username }}
      smtp_auth_password: {{ .Values.alerting.notifications.email.smtp.password }}
      {{- end }}
      {{- end }}
      
      # Resolve timeout
      resolve_timeout: 5m

    # Templates for custom alert messages
    templates:
      - '/etc/alertmanager/templates/*.tmpl'

    # Route configuration
    route:
      group_by: ['alertname', 'cluster']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'web.hook'
      routes:
      # Critical alerts - immediate notification
      - match:
          severity: critical
        receiver: critical-alerts
        group_wait: 0s
        repeat_interval: 5m
        routes:
        # CXTAF critical issues
        - match:
            namespace: cxtaf-cxeng
        receiver: cxtaf-critical
        # CXTM critical issues  
        - match:
            namespace: cxtm
        receiver: cxtm-critical
      
      # Warning alerts - standard notification
      - match:
          severity: warning
        receiver: warning-alerts
        group_wait: 30s
        repeat_interval: 12h
      
      # Infrastructure alerts
      - match:
          component: infrastructure
        receiver: infrastructure-alerts
        group_wait: 1m
        repeat_interval: 6h

    # Inhibit rules - suppress certain alerts when others are firing
    inhibit_rules:
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning' 
      equal: ['alertname', 'cluster', 'service']

    # Receivers - notification channels
    receivers:
    # Default webhook receiver
    - name: 'web.hook'
      webhook_configs:
      - url: 'http://localhost:5001/'
        send_resolved: true

    # Critical alerts receiver
    - name: 'critical-alerts'
      {{- if .Values.alerting.notifications.slack.enabled }}
      slack_configs:
      - api_url: {{ .Values.alerting.notifications.slack.webhook }}
        channel: '#critical-alerts'
        title: 'üö® Critical Alert - {{ .Values.environment.name }} üö®'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Severity:* {{ .Labels.severity }}
          *Environment:* {{ .Labels.cluster }}
          *Namespace:* {{ .Labels.namespace }}
          {{ end }}
        send_resolved: true
      {{- end }}
      {{- if .Values.alerting.notifications.email.enabled }}
      email_configs:
      - to: 'oncall@company.com'
        subject: 'üö® CRITICAL: {{ .GroupLabels.alertname }} - {{ .Values.environment.name }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Severity: {{ .Labels.severity }}
          Environment: {{ .Labels.cluster }}
          Namespace: {{ .Labels.namespace }}
          Started: {{ .StartsAt }}
          {{ end }}
      {{- end }}

    # CXTAF critical alerts
    - name: 'cxtaf-critical'
      {{- if .Values.alerting.notifications.slack.enabled }}
      slack_configs:
      - api_url: {{ .Values.alerting.notifications.slack.webhook }}
        channel: '#cxtaf-alerts'
        title: 'üî• CXTAF Critical Issue - {{ .Values.environment.name }}'
        text: |
          {{ range .Alerts }}
          *Service:* {{ .Labels.service }}
          *Issue:* {{ .Annotations.summary }}
          *Details:* {{ .Annotations.description }}
          *Pod:* {{ .Labels.pod }}
          {{ end }}
        send_resolved: true
      {{- end }}

    # CXTM critical alerts  
    - name: 'cxtm-critical'
      {{- if .Values.alerting.notifications.slack.enabled }}
      slack_configs:
      - api_url: {{ .Values.alerting.notifications.slack.webhook }}
        channel: '#cxtm-alerts'
        title: '‚ö†Ô∏è CXTM Critical Issue - {{ .Values.environment.name }}'
        text: |
          {{ range .Alerts }}
          *Service:* {{ .Labels.service }}
          *Issue:* {{ .Annotations.summary }}
          *Database:* {{ .Labels.database }}
          {{ end }}
        send_resolved: true
      {{- end }}

    # Warning alerts receiver
    - name: 'warning-alerts'
      {{- if .Values.alerting.notifications.slack.enabled }}
      slack_configs:
      - api_url: {{ .Values.alerting.notifications.slack.webhook }}
        channel: '#monitoring-warnings'
        title: '‚ö†Ô∏è Warning Alert - {{ .Values.environment.name }}'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Service:* {{ .Labels.service }}
          *Namespace:* {{ .Labels.namespace }}
          {{ end }}
        send_resolved: true
      {{- end }}

    # Infrastructure alerts receiver
    - name: 'infrastructure-alerts'
      {{- if .Values.alerting.notifications.slack.enabled }}
      slack_configs:
      - api_url: {{ .Values.alerting.notifications.slack.webhook }}
        channel: '#infrastructure'
        title: 'üèóÔ∏è Infrastructure Alert - {{ .Values.environment.name }}'
        text: |
          {{ range .Alerts }}
          *Component:* {{ .Labels.component }}
          *Node:* {{ .Labels.instance }}
          *Issue:* {{ .Annotations.summary }}
          {{ end }}
        send_resolved: true
      {{- end }}

  # Alert templates for custom formatting
  templates.tmpl: |
    {{`{{ define "__alert_severity_prefix" -}}`}}
        {{`{{- if eq .Labels.severity "critical" -}}`}}
            üö®
        {{`{{- else if eq .Labels.severity "warning" -}}`}}
            ‚ö†Ô∏è
        {{`{{- else if eq .Labels.severity "info" -}}`}}
            ‚ÑπÔ∏è
        {{`{{- else -}}`}}
            ‚ùì
        {{`{{- end }}`}}
    {{`{{- end }}`}}

    {{`{{ define "__alert_subject" -}}`}}
        {{`{{ template "__alert_severity_prefix" . }} {{ .Labels.alertname }} - {{ .Labels.cluster }}`}}
    {{`{{- end }}`}}

    {{`{{ define "custom.default.message" -}}`}}
        {{`{{- range .Alerts }}`}}
        {{`{{ template "__alert_severity_prefix" . }} **{{ .Labels.alertname }}**`}}
        
        {{`**Summary:** {{ .Annotations.summary }}`}}
        {{`{{- if .Annotations.description }}`}}
        {{`**Description:** {{ .Annotations.description }}`}}
        {{`{{- end }}`}}
        {{`**Environment:** {{ .Labels.cluster }}`}}
        {{`**Namespace:** {{ .Labels.namespace }}`}}
        {{`**Severity:** {{ .Labels.severity }}`}}
        {{`**Started:** {{ .StartsAt.Format "2006-01-02 15:04:05 UTC" }}`}}
        {{`{{- if .Labels.runbook_url }}`}}
        {{`**Runbook:** {{ .Labels.runbook_url }}`}}
        {{`{{- end }}`}}
        ---
        {{`{{- end }}`}}
    {{`{{- end }}`}}
{{- end }}