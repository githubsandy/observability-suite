apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "6"
    meta.helm.sh/release-name: cxtm
    meta.helm.sh/release-namespace: default
  creationTimestamp: "2025-04-11T12:50:52Z"
  generation: 6
  labels:
    app.kubernetes.io/instance: cxtm
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: scheduler
    helm.sh/chart: scheduler-0.1.0
  name: cxtm-scheduler
  namespace: default
  resourceVersion: "26458561"
  uid: ace2b687-2712-4522-89e8-5ba236d80f3d
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: cxtm
      app.kubernetes.io/name: scheduler
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: cxtm
        app.kubernetes.io/name: scheduler
    spec:
      automountServiceAccountToken: false
      containers:
      - env:
        - name: TASKDRIVER_PROTO
          value: http
        - name: TASKDRIVER_HOST
          value: cxtm-taskdriver
        - name: TASKDRIVER_PORT
          value: "8080"
        - name: REDIS_HOST
          value: cxtm-redis
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: redis
        - name: MINIO_HOST
          value: cxtm-minio
        - name: GLOBAL_MAX_RUNTIME
          value: "604800"
        - name: SCHEDULER_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: jwt_key
              name: scheduler
        - name: SA_KEY
          valueFrom:
            secretKeyRef:
              key: sa-key
              name: service-account-api-key
        - name: APP_SETTINGS_CACHE_TIME
          value: "60"
        - name: APP_SETTINGS_WHITELIST
          value: GLOBAL_MAX_RUNTIME,SMTP_SERVER,SMTP_FROM_EMAIL,TASK_STATE_EXPIRE_SECONDS,REMOVE_STOPPED_CONTAINERS,USE_ADDITIONAL_VOLUMES,ENFORCE_KNOWN_IMAGES
        - name: APP_SETTINGS_SECRET_WHITELIST
          value: CDETS_CONSUMER_KEY,CDETS_CONSUMER_SECRET,CDETS_ACCESS_TOKEN
        - name: TM2_BASE
          value: http://cxtm-web:8080
        - name: ENABLE_TASKDRIVER_REWRITE
          value: "true"
        image: dockerhub.cisco.com/cx-svs-internal-docker/tm_scheduler:25.4.0-rc.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: scheduler
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9200
          name: metrics
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeSelector:
        cx-tm.cisco.com: app
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-04-11T12:50:57Z"
    lastUpdateTime: "2025-04-11T12:50:57Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-04-11T12:50:52Z"
    lastUpdateTime: "2025-05-09T12:02:32Z"
    message: ReplicaSet "cxtm-scheduler-74fdbcf9d8" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 6
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
