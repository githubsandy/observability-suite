apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-app-trial
  namespace: splunk-trial-test
  labels:
    app: sample-app-trial
    purpose: splunk-o11y-alerting-poc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample-app-trial
  template:
    metadata:
      labels:
        app: sample-app-trial
        purpose: splunk-o11y-alerting-poc
    spec:
      containers:
      - name: sample-app-trial
        image: python:3.9-slim
        env:
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "https://ingest.au0.signalfx.com"
        - name: OTEL_EXPORTER_OTLP_HEADERS
          value: "X-SF-Token=pceyC0WC6s-0JiFsfzuWWA"
        - name: OTEL_SERVICE_NAME
          value: "sample-app-calolab"
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.name=sample-app-calolab,service.version=1.0.0,deployment.environment=trial,cluster=calolab-k8s"
        - name: SPLUNK_ACCESS_TOKEN
          value: "pceyC0WC6s-0JiFsfzuWWA"
        - name: SPLUNK_REALM
          value: "au0"
        command: ["sh", "-c"]
        args:
        - |
          pip install requests
          python -c '
          import time
          import random
          import requests
          import json
          import os
          from datetime import datetime

          SPLUNK_TOKEN = "pceyC0WC6s-0JiFsfzuWWA"
          SPLUNK_REALM = "au0"
          INGEST_URL = f"https://ingest.{SPLUNK_REALM}.signalfx.com/v2/datapoint"

          print(f"Starting Splunk O11y Alert POC Data Generator")
          print(f"Sending data to: {INGEST_URL}")

          counter = 0
          while True:
              counter += 1
              current_time = int(time.time() * 1000)
              cpu_usage = random.uniform(15, 95)
              memory_usage = random.uniform(25, 88)
              response_time = random.uniform(100, 8000)
              error_rate = random.uniform(0, 12)

              if counter % 10 == 0:
                  cpu_usage = random.uniform(91, 98)
                  print(f"HIGH CPU spike: {cpu_usage:.2f}%")
              if counter % 15 == 0:
                  memory_usage = random.uniform(89, 95)
                  print(f"HIGH MEMORY spike: {memory_usage:.2f}%")

              metrics_data = {
                  "gauge": [
                      {
                          "metric": "calolab.cpu.utilization",
                          "value": cpu_usage,
                          "timestamp": current_time,
                          "dimensions": {"service": "sample-app-calolab", "host": "calolab-k8s", "environment": "trial"}
                      },
                      {
                          "metric": "calolab.memory.utilization",
                          "value": memory_usage,
                          "timestamp": current_time,
                          "dimensions": {"service": "sample-app-calolab", "host": "calolab-k8s", "environment": "trial"}
                      }
                  ]
              }

              headers = {"X-SF-Token": SPLUNK_TOKEN, "Content-Type": "application/json"}

              try:
                  response = requests.post(INGEST_URL, headers=headers, json=metrics_data, timeout=10)
                  if response.status_code == 200:
                      print(f"[{datetime.now().strftime(\"%H:%M:%S\")}] Metrics sent - CPU: {cpu_usage:.1f}%, Memory: {memory_usage:.1f}%")
                  else:
                      print(f"Failed - Status: {response.status_code}")
              except Exception as e:
                  print(f"Error: {e}")

              time.sleep(30)
          '
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "print('alive')"
          initialDelaySeconds: 30
          periodSeconds: 60
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "print('ready')"
          initialDelaySeconds: 10
          periodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: sample-app-trial-service
  namespace: splunk-trial-test
  labels:
    app: sample-app-trial
    purpose: splunk-o11y-alerting-poc
spec:
  selector:
    app: sample-app-trial
  ports:
  - port: 80
    targetPort: 8080
    name: http
  type: ClusterIP

---
apiVersion: v1
kind: Namespace
metadata:
  name: splunk-trial-test
  labels:
    purpose: splunk-o11y-alerting-poc
    environment: trial