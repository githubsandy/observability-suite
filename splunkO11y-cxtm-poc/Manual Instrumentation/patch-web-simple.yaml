spec:
  template:
    spec:
      containers:
      - name: web
        env:
        - name: OTEL_SERVICE_NAME
          value: "cxtm-web"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://otel-collector:4318"
        - name: OTEL_EXPORTER_OTLP_PROTOCOL
          value: "http/protobuf"
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.version=25.2.0,deployment.environment=nightly"
        - name: OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED
          value: "true"
        - name: OTEL_LOG_LEVEL
          value: "debug"
        command:
        - sh
        - -c
        - |
          echo "Installing OpenTelemetry for cxtm-web..."
          pip install opentelemetry-distro opentelemetry-exporter-otlp
          opentelemetry-bootstrap --action=install
          echo "Adding manual instrumentation..."
          echo "from opentelemetry.instrumentation.flask import FlaskInstrumentor" >> /app/src/app.py
          echo "FlaskInstrumentor().instrument_app(app)" >> /app/src/app.py
          echo "Starting instrumented cxtm-web application..."
          exec opentelemetry-instrument gunicorn app:app -b 0.0.0.0:8080 --worker-class=gthread --workers=4 --threads=8 --log-level=info --log-file=- --max-requests=1000 --max-requests-jitter=100 --enable-stdio-inheritance --config=/app/src/gunicorn_conf.py