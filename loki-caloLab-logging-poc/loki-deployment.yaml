---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: ao
data:
  loki.yaml: |
    auth_enabled: false
    
    server:
      http_listen_port: 3100
      grpc_listen_port: 9096
      log_level: info

    common:
      path_prefix: /loki
      storage:
        filesystem:
          chunks_directory: /loki/chunks
          rules_directory: /loki/rules
      replication_factor: 1
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory

    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h

    storage_config:
      boltdb_shipper:
        active_index_directory: /loki/boltdb-shipper-active
        cache_location: /loki/boltdb-shipper-cache
        cache_ttl: 24h
        shared_store: filesystem
      filesystem:
        directory: /loki/chunks

    compactor:
      working_directory: /loki/boltdb-shipper-compactor
      shared_store: filesystem

    limits_config:
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      ingestion_rate_mb: 16
      ingestion_burst_size_mb: 32
      max_cache_freshness_per_query: 10m
      enforce_metric_name: false
      split_queries_by_interval: 15m

    chunk_store_config:
      max_look_back_period: 0s

    table_manager:
      retention_deletes_enabled: true
      retention_period: 168h  # 7 days retention for POC


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki-storage
  namespace: ao
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn-single
  resources:
    requests:
      storage: 20Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: ao
  labels:
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      name: loki
      labels:
        app: loki
    spec:
      nodeSelector:
        kubernetes.io/hostname: uta-k8s-ao-01  # Deploy on same AO node
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      containers:
      - name: loki
        image: grafana/loki:2.9.2
        args:
          - '-config.file=/etc/loki/loki.yaml'
          - '-target=all'
        ports:
        - name: http-metrics
          containerPort: 3100
          protocol: TCP
        - name: grpc
          containerPort: 9096
          protocol: TCP
        resources:
          limits:
            memory: "1Gi"
            cpu: "1000m"
          requests:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: loki-config-volume
          mountPath: /etc/loki
        - name: loki-storage-volume
          mountPath: /loki
        livenessProbe:
          httpGet:
            path: /ready
            port: 3100
          initialDelaySeconds: 45
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3100
          initialDelaySeconds: 45
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        env:
        - name: JAEGER_AGENT_HOST
          value: ""
      volumes:
      - name: loki-config-volume
        configMap:
          name: loki-config
          defaultMode: 420
      - name: loki-storage-volume
        persistentVolumeClaim:
          claimName: loki-storage

---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: ao
  labels:
    app: loki
spec:
  type: NodePort
  ports:
    - name: http-metrics
      port: 3100
      protocol: TCP
      targetPort: 3100
      nodePort: 30310
    - name: grpc
      port: 9096
      protocol: TCP
      targetPort: 9096
  selector:
    app: loki